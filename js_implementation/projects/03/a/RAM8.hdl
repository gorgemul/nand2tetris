// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=outR1, b=outR2, c=outR3, d=outR4, e=outR5, f=outR6, g=outR7, h=outR8);
    Register(in=in, load=outR1, out=outMux1);
    Register(in=in, load=outR2, out=outMux2);
    Register(in=in, load=outR3, out=outMux3);
    Register(in=in, load=outR4, out=outMux4);
    Register(in=in, load=outR5, out=outMux5);
    Register(in=in, load=outR6, out=outMux6);
    Register(in=in, load=outR7, out=outMux7);
    Register(in=in, load=outR8, out=outMux8);
    Mux8Way16(a=outMux1, b=outMux2, c=outMux3, d=outMux4, e=outMux5, f=outMux6, g=outMux7, h=outMux8, sel=address, out=out);
}