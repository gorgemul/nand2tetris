// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[6..8], a=outR1, b=outR2, c=outR3, d=outR4, e=outR5, f=outR6, g=outR7, h=outR8);
    RAM64(in=in, load=outR1, address=address[0..5], out=outMux1);
    RAM64(in=in, load=outR2, address=address[0..5], out=outMux2);
    RAM64(in=in, load=outR3, address=address[0..5], out=outMux3);
    RAM64(in=in, load=outR4, address=address[0..5], out=outMux4);
    RAM64(in=in, load=outR5, address=address[0..5], out=outMux5);
    RAM64(in=in, load=outR6, address=address[0..5], out=outMux6);
    RAM64(in=in, load=outR7, address=address[0..5], out=outMux7);
    RAM64(in=in, load=outR8, address=address[0..5], out=outMux8);
    Mux8Way16(a=outMux1, b=outMux2, c=outMux3, d=outMux4, e=outMux5, f=outMux6, g=outMux7, h=outMux8, sel=address[6..8], out=out);
}